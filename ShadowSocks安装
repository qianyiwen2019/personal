# ShadowSocks安装

shadowsock server
安装
Debian / Ubuntu:

apt-get install python-pip 
pip install shadowsocks
CentOS:

yum install python-setuptools && easy_install pip 
pip install shadowsocks
命令启动
// ssserver -p 8080 -k password -m rc4-md5 -d start
// sudo ssserver -p 443 -k password -m aes-256-cfb --user nobody -d start
命令停止
sudo ssserver -d stop


使用配置文件启动

vim /etc/shadowsocks.json

{
  "server": "0.0.0.0",
  "server_port": 8388,
  "local_port": 1080,
  "password": "123456",
  "timeout": 600,
  "method": "rc4-md5"
}

启动
ssserver -c /etc/shadowsocks.json -d start

PS: 记得执行iptables -F 关闭防火墙

以下方式针对centos7经过验证

开启加速，使用root身份登录你的vps，输入下面命令就自动安装BBR算法。
wget –no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh
chmod +x bbr.sh
./bbr.sh

验证 bbr 已经启动
https://www.cnblogs.com/sunylat/p/9521881.html
启动BBR。依次执行下面命令就可以了。
  sed -i '/net.core.default_qdisc/d' /etc/sysctl.conf 
  sed -i '/net.ipv4.tcp_congestion_control/d' /etc/sysctl.conf 
  echo "net.core.default_qdisc = fq" >> /etc/sysctl.conf 
  echo "net.ipv4.tcp_congestion_control = bbr" >> /etc/sysctl.conf 
  sysctl -p  
  reboot 
当系统重新启动后，BBR就已经可以使用了！
验证BBR是否已经可用。
  A，验证当前TCP控制算法的命令：
    sysctl net.ipv4.tcp_available_congestion_control 
    返回值一般为：
    net.ipv4.tcp_available_congestion_control = bbr cubic reno
    或者为：
    net.ipv4.tcp_available_congestion_control = reno cubic bbr
  B，验证BBR是否已经启动。
    sysctl net.ipv4.tcp_congestion_control 
    返回值一般为：
    net.ipv4.tcp_congestion_control = bbr
    lsmod | grep bbr 
    返回值有 tcp_bbr 模块即说明 bbr 已启动。注意：并不是所有的 VPS 都会有此返回值，若没有也属正常。


客户端使用：
1. 下载 ShadowsocksX，安装并配置（端口，密码与 server 上一致）
https://github.com/shadowsocks/ShadowsocksX-NG                     (mac)
https://github.com/shadowsocks/shadowsocks-windows/releases        (windows)
https://github.com/netroby/shadowsocks-gui-for-windows             (windows低版本）
2. 如果浏览器有代理，chrome 浏览器需使用“系统代理”而非“直接连接”


